OS="$(uname)"

if [ "$OS" = "Linux" ] || [ "$OS" = "Darwin" ]; then
  echo ""
  echo "💻 Unix-based system detected. Checking @polkadot-api/descriptors path..."

  if grep -q '"@polkadot-api/descriptors": "file:.papi/descriptors"' package.json; then
    echo "❌ Invalid path format detected in package.json for @polkadot-api/descriptors."
    echo "🛠  Expected: 'file:.papi\\descriptors'"
    echo "🔒 Commit aborted to prevent cross-platform compatibility issues."
    echo "💡 Run 'pnpm revert:path' to correct the path for Windows."
    exit 1
  else
    echo "✅ Path format is correct: using backslashes for Windows."
  fi

  if grep -q "specifier: file:.papi/descriptors" pnpm-lock.yaml; then
    echo "❌ Invalid path format detected in pnpm-lock.yaml for @polkadot-api/descriptors."
    echo "🛠  Expected: 'specifier: file:.papi\descriptors'"
    echo "🔒 Commit aborted to prevent cross-platform compatibility issues."
    echo "💡 Run 'pnpm revert:path' to correct the path for Windows."
    exit 1
  else
    echo "✅ Path format is correct: using backslash for Windows."
  fi
  else
  echo ""
  echo "🪟 Windows detected. Skipping @polkadot-api/descriptors path check."
fi

# 🔍 Run lint-staged
echo ""
echo "🔍 Running lint-staged..."
pnpm lint-staged

if [ $? -ne 0 ]; then
  echo "❌ lint-staged failed. Fix the issues before committing."
  exit 1
else
  echo "✅ lint-staged passed."
fi

# 🚨 Run ESLint in production mode
echo ""
echo "🚨 Running production lint (ESLint)..."
pnpm lint:prod

if [ $? -ne 0 ]; then
  echo "❌ ESLint failed in production mode. Please fix lint errors."
  exit 1
else
  echo "✅ ESLint passed."
fi

# 🛠️  TypeScript type check
echo ""
echo "🛠️  Running TypeScript type check..."
pnpm tsc

if [ $? -ne 0 ]; then
  echo "❌ TypeScript type check failed. Fix type errors before committing."
  exit 1
else
  echo "✅ TypeScript check passed."
fi

# 🏗️  Build project
echo ""
echo "🏗️  Building project..."
pnpm build

if [ $? -ne 0 ]; then
  echo "❌ Build failed. Fix build errors before committing."
  exit 1
else
  echo "✅ Build succeeded."
fi

# 🎉 Final success message
echo ""
echo "🎉 All checks passed. Proceeding with commit."
